---
# all-purpose workspace persister
persist-to-workspace: &persist-to-workspace
  persist-to-workspace:
    root: .
    paths:
      - ./

version: 2

executors:
  base-executor:
    working_directory: ~/pantheon-systems/fusedav
    docker:
    - image: circleci/python:2.7.15-stretch

jobs:
  build:
    executor: base-executor
    parallelism: 1
    shell: /bin/bash --login
    steps:
      - checkout
      - run:
          name: Start Docker
          command: 'sudo docker info >/dev/null 2>&1 || sudo service docker start; '
      - run:
          name: Install Dependencies
          command: if ["2.7.5" == "system"] || pyenv versions --bare | grep -x -q '2.7.5'; then pyenv global version;else pyenv install --skip-existing  2.7.5 && pyenv global version && pyenv rehash && pip install virtualenv && pip install nose && pip install pep8 && pyenv rehash;fi
      - run:
          name: Establish ruby version
          command: rm -f pantheon-systems/fusedav/.rvmrc; echo 2.4.0 > pantheon-systems/fusedav/.ruby-version; rvm use 2.4.0 --default
      - run: 
          name: Install cpplint
          command: pip install cpplint
      - run: 
          name: Set up version
          command: bash scripts/version.sh
      - *persist-to-workspace

  test:
    executor: base-executor
    steps:
      - attach_workspace:
          at: .
      - run: cpplint --filter=-whitespace/line_length src/* ; true
      - run: bash scripts/docker-outer.sh
      - *persist-to-workspace

  deploy-dev:
    executor: base-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Package Cloud
          command: |
            gem install package_cloud
            bash scripts/push_packagecloud.sh internal

  deploy-prod:
    executor: base-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            gem install package_cloud
            git push --tags
            bash scripts/push_packagecloud.sh internal

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy-dev:
          requires:
            - test
          filters:
            branches:
              only:
                - dev
                - yolo
                - stage
      - deploy-prod:
          requires:
            - test
          filters:
            branches:
              only:
                -master
