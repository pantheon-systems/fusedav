---
# all-purpose workspace persister
persist_to_workspace: &persist_to_workspace
  persist_to_workspace:
    root: .
    paths:
      - ./

version: 2.1

# consolidate
executors:
  python-executor:
    working_directory: ~/pantheon-systems/fusedav
    docker:
      - image: circleci/python:2.7.15
  ruby-executor:
    working_directory: ~/pantheon-systems/fusedav
    docker:
      - image: circleci/ruby:2.4

jobs:
  build-test:
    executor: python-executor
    parallelism: 1
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install cpplint
          command: sudo pip install cpplint
      - run:
          name: Hack GitHub credentials into git URL
          command: |
            git config --global url."https://$GITHUB_TOKEN:x-oauth-basic@github.com/pantheon-systems/".insteadOf "git@github.com:pantheon-systems/"
      - run:
          name: Set up version
          command: bash scripts/version.sh
      - run:
         name: Call cpplint; expected to fail, so set things up to pass
         command: |
           set +eo pipefail
           /usr/local/bin/cpplint --filter=-whitespace/line_length src/*
           true
      - run:
         name: Build the image
         command: bash scripts/docker-outer.sh
      - *persist_to_workspace

  deploy-dev:
    executor: ruby-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install and Push to Package Cloud
          command: |
            gem install package_cloud
            bash scripts/push_packagecloud.sh internal

  deploy-prod:
    executor: ruby-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install and Push to Package Cloud
          command: |
            gem install package_cloud
            bash scripts/push_packagecloud.sh internal

workflows:
  build-test-deploy:
    jobs:
      - build-test:
          name: build-test-dev
          filters:
            branches:
              ignore:
                - master
      - build-test:
          name: build-test-prod
          context:
            - sig-go-release
          filters:
            branches:
              only:
                - master
      - deploy-dev:
          requires:
            - build-test-dev
          filters:
            branches:
              only:
                - dev
                - yolo
                - stage
      - deploy-prod:
          requires:
            - build-test-prod
          context:
            - sig-go-release
          filters:
            branches:
              only:
                - master
