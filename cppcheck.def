// This file is part of fusedav.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

// LevelDB

void *leveldb_open() {
    return malloc(1);
}
void leveldb_close(void *p) {
    free(p);
}

void *leveldb_get() {
    return malloc(1);
}
void *leveldb_property_value() {
    return malloc(1);
}
void leveldb_free(void *p) {
    free(p);
}

void *leveldb_create_iterator() {
    return malloc(1);
}
void leveldb_iter_destroy(void *p) {
    free(p);
}

void *leveldb_create_snapshot() {
    return malloc(1);
}
void leveldb_release_snapshot(void *p) {
    free(p);
}

void *leveldb_writebatch_create() {
    return malloc(1);
}
void leveldb_writebatch_destroy(void *p) {
    free(p);
}

void *leveldb_options_create() {
    return malloc(1);
}
void leveldb_options_destroy(void *p) {
    free(p);
}

void *leveldb_comparator_create() {
    return malloc(1);
}
void leveldb_comparator_destroy(void *p) {
    free(p);
}

void *leveldb_filterpolicy_create() {
    return malloc(1);
}
void *leveldb_filterpolicy_create_bloom() {
    return malloc(1);
}
void leveldb_filterpolicy_destroy(void *p) {
    free(p);
}

void *leveldb_readoptions_create() {
    return malloc(1);
}
void leveldb_readoptions_destroy(void *p) {
    free(p);
}

void *leveldb_writeoptions_create() {
    return malloc(1);
}
void leveldb_writeoptions_destroy(void *p) {
    free(p);
}

void *leveldb_cache_create_lru() {
    return malloc(1);
}
void leveldb_cache_destroy(void *p) {
    free(p);
}

void *leveldb_create_default_env() {
    return malloc(1);
}
void leveldb_env_destroy(void *p) {
    free(p);
}

CURL *curl_easy_init() {
    return malloc(1);
}
void curl_easy_cleanup(CURL *p) {
    free(p);
}

void *curl_easy_unescape() {
    return malloc(1);
}
void curl_free(void *p) {
    free(p);
}
